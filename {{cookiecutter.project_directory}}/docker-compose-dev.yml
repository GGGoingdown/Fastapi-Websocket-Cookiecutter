version: "3"
services:
  app:
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile.dev
    volumes:
      - .:/app/
    restart: unless-stopped
    depends_on:
      - db
      - cache

    ports:
      - ${APPLICATION_PORT:-8000}:8000
    expose:
      - ${APPLICATION_PORT:-8000}
    env_file:
      - ./env/.env.dev
    environment:
      - ENVIRONMENT=DEV
    command: /app/script/service_startup.sh

  worker:
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile.dev
    volumes:
      - .:/app/
    restart: unless-stopped
    depends_on:
      - broker
      - cache
    env_file:
      - ./env/.env.dev
    environment:
      - ENVIRONMENT=DEV
    command: /app/script/worker_startup.sh

  db:
    image: postgres:13
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USERNAME:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-test}
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - ${POSTGRES_EXPOSE:-5432}:5432
    expose:
      - ${POSTGRES_EXPOSE:-5432}

  cache:
    image: redis:6.2
    ports:
      - ${REDIS_EXPOSE:-6379}:6379
    expose:
      - ${REDIS_EXPOSE:-6379}
    restart: unless-stopped
    command: >
      --requirepass ${REDIS_PASSWORD:-redis_user}

  broadcaster:
    image: redis:6.2
    ports:
      - ${BROADCASTER_EXPOSE:-6380}:6379
    expose:
      - ${BROADCASTER_EXPOSE:-6380}
    restart: unless-stopped

  broker:
    image: rabbitmq:3.8-management
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USERNAME:-rabbitmq_user}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD:-rabbitmq_user}
    restart: unless-stopped
    ports:
      - ${RABBITMQ_EXPOSE:-5672}:5672
      - ${RABBITMQ_MANAGEMENT_EXPOSE:-15672}:15672
    expose:
      - ${RABBITMQ_EXPOSE:-5672}
      - ${RABBITMQ_MANAGEMENT_EXPOSE:-15672}
volumes:
  cache_data: null
  db_data: null
  broker_data: null
